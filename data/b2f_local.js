//This code was autogenerated by ESP Mango code generator V1.2 for "sketch_espmango" sketch at: 25-08-2024 22:20:24
//ESP Mango code generator was created by Julian D. Medina --- JulianDM1995@gmail.com - 2020 

//==================================================================================================================================
//------------------------------------------------| Backend to Frontend functions |-------------------------------------------------
//==================================================================================================================================

/*In Arduino add: " respondReqOFWiFiCredentials(); "
	to call this function in webpage Frontend. */
function respondReqOFWiFiCredentials(jsonObj) {

    //-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
    if (BackendToFrontendDebug) {
        console.log("\nExecuting \"respondReqOFWiFiCredentials\" from local server");
    }
    //-----------------------------------------------| ~ |------------------------------------------------

    //Write your own code for "respondReqOFWiFiCredentials" here. Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: avdxefjorm

    console.log("Credentials Received");

    let jsonparams = jsonObj["params"];
    let jsonSSID = jsonparams["ssid"]
    let jsonRSSI = jsonparams["rssi"];

    let selectHTML = "";
    let countArray = jsonSSID.length;
    selectHTML += "<option value='0' hidden>Select SSID</option>";
    for (let i = 0; i < countArray; i++) {
        selectHTML += "<option value='" + jsonSSID[i] + "'>" + jsonSSID[i] + " (" + jsonRSSI[i] + ")" + "</option>";
    }

    document.getElementById("credentials").innerHTML = selectHTML;
    enableForm();
    disableSubmitButton();
    $("#statusLabel").text("WiFi Manager Ready");

    //End of your own code. 	Code: avdxefjorm

}

/*In Arduino add: " responseCredentialsToServer(); "
	to call this function in webpage Frontend. */
function responseCredentialsToServer() {

    //-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
    if (BackendToFrontendDebug) {
        console.log("\nExecuting \"responseCredentialsToServer\" from local server");
    }
    //-----------------------------------------------| ~ |------------------------------------------------

    //Write your own code for "responseCredentialsToServer" here. Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: wmpvhbehyi

    disableForm();
    //changeStatusLabel("Credentials sent. Waiting for connecttion <br/> Verify if led of ESP32 <br/> Led OFF: Not Connected <br/> Led Blinking: Trying to connect <br/> Led ON: Connected", true, $("#statusLabel"));
    $("#statusLabel").html("Credentials sent. <br/> verify ESP32 led status  <br/> if Led OFF: Not Connected (Try again) <br/> if Led Blinks: Trying to Connect <br/> Led ON: Connected (Connect your PC or device to the selected ssid)<br/>");
    //End of your own code. 	Code: wmpvhbehyi
    let cred = $("#statusLabel")
    if (cred.hasClass("status-wrong")) cred.removeClass("status-wrong");
    if (cred.hasClass("status-valid")) cred.removeClass("status-valid");

}

/*In Arduino add: " respondSensorsData(); "
	to call this function in webpage Frontend. */
function respondSensorsData(jsonObj) {

    //-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
    if (BackendToFrontendDebug) {
        console.log("\nExecuting \"respondSensorsData\" from local server");
    }
    //-----------------------------------------------| ~ |------------------------------------------------

    //Write your own code for "respondSensorsData" here. Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: gfkkzealim
    let jsonparams = jsonObj["params"];
    getParamStatus(jsonparams);

    //End of your own code. 	Code: gfkkzealim

}

/*In Arduino add: " responseBulbLigthStatus(); "
	to call this function in webpage Frontend. */
function responseBulbLigthStatus(jsonObj) {

    //-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
    if (BackendToFrontendDebug) {
        console.log("\nExecuting \"responseBulbLigthStatus\" from local server");
    }
    //-----------------------------------------------| ~ |------------------------------------------------

    //Write your own code for "responseBulbLigthStatus" here. Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: pxeylnrsw
    let jsonparams = jsonObj["params"];
    let objStatusSubmit = {
        bulb: jsonparams["bulb"],
        fan: jsonparams["fan"],
        m: jsonparams["m"]
    }
    getBulbStatus(objStatusSubmit)

    //End of your own code. 	Code: pxeylnrswn

}

//----------------------------------------------| JSON decoder and function assigner |----------------------------------------------

function executeFunction(jsonObj) {
    //Function selecter
    let functionID = jsonObj.LocalFunctionID;
    if (functionID == 0) { //When "respondReqOFWiFiCredentials" function is called.
        respondReqOFWiFiCredentials(jsonObj);
    } else if (functionID == 1) { //When "responseCredentialsToServer" function is called.
        responseCredentialsToServer();
    } else if (functionID == 2) { //When "respondSensorsData" function is called.
        respondSensorsData(jsonObj);
    } else if (functionID == 3) { //When "responseBulbLigthStatus" function is called.
        responseBulbLigthStatus(jsonObj);
    }

}