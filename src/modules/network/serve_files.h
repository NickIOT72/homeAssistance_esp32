//This code was autogenerated by ESP Mango code generator V1.2 for "sketch_espmango" sketch at: 26-08-2024 07:52:16
//ESP Mango code generator was created by Julian D. Medina --- JulianDM1995@gmail.com - 2020 

//-------------------------------------------------------| SERVER RESPONSES |-------------------------------------------------------

//------------------------------------------------| Responses for files in SPIFFS |-------------------------------------------------

void on_b2f_local_js_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/b2f_local.js", "application/javascript");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_conn_evt_js_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/conn_evt.js", "application/javascript");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_ds_index_html_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	if (WiFi.status() == WL_CONNECTED ) request->send(SPIFFS, "/ds_index.html", "text/html");
	else request->redirect( "/wf_index.html");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_ds_script_js_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/ds_script.js", "application/javascript");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_ds_style_css_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/ds_style.css", "text/css");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_esp_mango_local_js_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/esp_mango_local.js", "application/javascript");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_f2b_local_js_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/f2b_local.js", "application/javascript");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_index_html_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->redirect( WiFi.status() != WL_CONNECTED?"/wf_index.html":"/ds_index.html");
	//request->send(SPIFFS, "/index.html", "text/html");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_jquery_js_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/jquery.js", "application/javascript");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_wf_index_html_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	if (WiFi.status() != WL_CONNECTED ) request->send(SPIFFS, "/wf_index.html", "text/html");
	else request->redirect( "/ds_index.html");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_wf_index_js_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/wf_index.js", "application/javascript");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

void on_wf_styles_css_request(AsyncWebServerRequest *request) {
	IPAddress remote_ip = request->client()->remoteIP();
	if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
	unsigned long time = millis();
	request->send(SPIFFS, "/wf_styles.css", "text/css");
	if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
}

//------------------------------------------------------| Not found response |------------------------------------------------------

void notFound(AsyncWebServerRequest *request) {
	if (SPIFFS.exists("/notFound.html")) {
		IPAddress remote_ip = request->client()->remoteIP();
		if (ServeDebug)Serial.print("[" + remote_ip.toString() + "] HTTP GET request of \" " + request->url() + " \"... ");
		unsigned long time = millis();
		request->send(SPIFFS, "/notFound.html", "text/html");
		if (ServeDebug)Serial.println(" Streamed in " + String(millis() - time) + "ms.");
	} else {
		request->send(404, "text/plain", "Page Not found");
	}
	Serial.println("Page \"" + request->url() + "\" Not found");
}

void startResponseFilesInSPIFFS() {
	//Responses for files in SPIFFS
	server.on("/", HTTP_GET, on_index_html_request);
	server.on("/b2f_local.js", HTTP_GET, on_b2f_local_js_request);
	server.on("/conn_evt.js", HTTP_GET, on_conn_evt_js_request);
	server.on("/ds_index.html", HTTP_GET, on_ds_index_html_request);
	server.on("/ds_script.js", HTTP_GET, on_ds_script_js_request);
	server.on("/ds_style.css", HTTP_GET, on_ds_style_css_request);
	server.on("/esp_mango_local.js", HTTP_GET, on_esp_mango_local_js_request);
	server.on("/f2b_local.js", HTTP_GET, on_f2b_local_js_request);
	server.on("/index.html", HTTP_GET, on_index_html_request);
	server.on("/jquery.js", HTTP_GET, on_jquery_js_request);
	server.on("/wf_index.html", HTTP_GET, on_wf_index_html_request);
	server.on("/wf_index.js", HTTP_GET, on_wf_index_js_request);
	server.on("/wf_styles.css", HTTP_GET, on_wf_styles_css_request);
	server.onNotFound(notFound);

}
