//This code was autogenerated by ESP Mango code generator V1.2 for "sketch_espmango" sketch at: 25-08-2024 22:20:24
//ESP Mango code generator was created by Julian D. Medina --- JulianDM1995@gmail.com - 2020 

//==================================================================================================================================
//------------------------------------------------| Backend to Frontend functions |-------------------------------------------------
//==================================================================================================================================
#include "network.h"
//----------------------------------------------------| Function declarations |-----------------------------------------------------

void respondReqOFWiFiCredentials(struct ssidList *sl, uint8_t size);
void responseCredentialsToServer();
void respondSensorsData();
void responseBulbLigthStatus();

//-----------------------------------------------------| Function definitions |-----------------------------------------------------

void respondReqOFWiFiCredentials(struct ssidList *sl, uint8_t size) {

	//--------------------------------|  DON'T EDIT THIS BLOCK OF CODE  |---------------------------------
	String jsonString = "{\"LocalFunctionID\":0";
	String jsonParams = ",\"params\":{";

	String jsonSSIDparam = "\"ssid\":[";
	String jsonRSSIparam = "\"rssi\":[";

	for( int i = 0; i < size; i++ )
	{
		jsonSSIDparam += "\"";
		jsonSSIDparam += sl[i].ssid;
		jsonSSIDparam += "\"";
		if ( i +1 < size) jsonSSIDparam += ",";
		jsonRSSIparam += String(sl[i].rssi);
		if ( i +1 < size) jsonRSSIparam += ",";
	}

	jsonSSIDparam += "]";
	jsonRSSIparam += "]";

	jsonParams += jsonSSIDparam;
	jsonParams += ",";
	jsonParams += jsonRSSIparam;

	jsonParams += "}";
	jsonString += jsonParams;
	jsonString += "}";
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
	if (BackendToFrontendDebug) {
		Serial.println("\nSending \"respondReqOFWiFiCredentials\" to local server");
	}
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------------|  Local server broadcast.  |------------------------------------
	websockets.broadcastTXT(jsonString); //Broadcast this message to all connected devices.
	//websockets.sendTXT(num, jsonString); //Uncomment this line and comment the previous one if you want to respond only to the device number "num".
	//-----------------------------------------------| ~ |------------------------------------------------

	//Write your own code for "respondReqOFWiFiCredentials" here if necessary (Probably not). Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: avdxefjorm



	//End of your own code. 	Code: avdxefjorm

}

void responseCredentialsToServer() {

	//--------------------------------|  DON'T EDIT THIS BLOCK OF CODE  |---------------------------------
	String jsonString = "{\"LocalFunctionID\":1";
	String jsonParams = ",\"params\":{\"r\":1";
	jsonParams += "}";
	jsonString += jsonParams;
	jsonString += "}";
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
	if (BackendToFrontendDebug) {
		Serial.println("\nSending \"responseCredentialsToServer\" to local server");
	}
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------------|  Local server broadcast.  |------------------------------------
	websockets.broadcastTXT(jsonString); //Broadcast this message to all connected devices.
	//websockets.sendTXT(num, jsonString); //Uncomment this line and comment the previous one if you want to respond only to the device number "num".
	//-----------------------------------------------| ~ |------------------------------------------------

	//Write your own code for "responseCredentialsToServer" here if necessary (Probably not). Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: wmpvhbehyi



	//End of your own code. 	Code: wmpvhbehyi

}

void respondSensorsData(String sensorinfo) {

	//--------------------------------|  DON'T EDIT THIS BLOCK OF CODE  |---------------------------------
	String jsonString = "{\"LocalFunctionID\":2";
	String jsonParams = ",\"params\":{";
	jsonParams += sensorinfo;
	jsonParams += "}";
	jsonString += jsonParams;
	jsonString += "}";
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
	if (BackendToFrontendDebug) {
		Serial.println("\nSending \"respondSensorsData\" to local server");
	}
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------------|  Local server broadcast.  |------------------------------------
	websockets.broadcastTXT(jsonString); //Broadcast this message to all connected devices.
	//websockets.sendTXT(num, jsonString); //Uncomment this line and comment the previous one if you want to respond only to the device number "num".
	//-----------------------------------------------| ~ |------------------------------------------------

	//Write your own code for "respondSensorsData" here if necessary (Probably not). Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: gfkkzealim



	//End of your own code. 	Code: gfkkzealim

}

struct submitStatusWeb { 
	int bulb;
	int fan;
	int mode;
};

void responseBulbLigthStatus(struct submitStatusWeb *ss, int mod) {

	//--------------------------------|  DON'T EDIT THIS BLOCK OF CODE  |---------------------------------
	String jsonString = "{\"LocalFunctionID\":3";
	String jsonParams = ",\"params\":{";
	jsonParams += "\"bulb\":" + String(ss->bulb);
	jsonParams += ",\"fan\":" + String(ss->fan);
	jsonParams += ",\"m\":" + String(ss->mode);
	jsonParams += "}";
	jsonString += jsonParams;
	jsonString += "}";
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------|  Debugging print. Remove if you want.  |-----------------------------
	if (BackendToFrontendDebug) {
		Serial.println("\nSending \"responseBulbLigthStatus\" to local server");
	}
	//-----------------------------------------------| ~ |------------------------------------------------

	//-----------------------------------|  Local server broadcast.  |------------------------------------
	websockets.broadcastTXT(jsonString); //Broadcast this message to all connected devices.
	//websockets.sendTXT(num, jsonString); //Uncomment this line and comment the previous one if you want to respond only to the device number "num".
	//-----------------------------------------------| ~ |------------------------------------------------

	//Write your own code for "responseBulbLigthStatus" here if necessary (Probably not). Code inside this comments will not overwrite. DON'T EDIT OR REMOVE THIS COMMENTS. 	Code: pxeylnrswn



	//End of your own code. 	Code: pxeylnrswn

}


